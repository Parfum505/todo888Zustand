{"version":3,"file":"static/js/688.b373317c.chunk.js","mappings":"6JAGA,MAAMA,EAAqBC,EAAAA,MAAW,IAAM,6BAgB5C,EAdkCC,KAChC,MAAM,KAAEC,EAAI,MAAEC,IAAUC,EAAAA,EAAAA,GAAS,kEAEjC,OAAID,GAAcE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,4BAA0BH,EAAM,QACnDD,GAAMK,QAAQC,IAAI,gBAAiBN,IAGrCG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACAG,EAAAA,EAAAA,KAAA,OAAAH,SAAK,sBACLG,EAAAA,EAAAA,KAAA,OAAAH,SAAK,YACLG,EAAAA,EAAAA,KAACV,EAAkB,OACb,C,4CCRH,SAASK,EAAYM,GAC1B,MAAOR,EAAMS,IAAWC,EAAAA,EAAAA,UAAmB,OACpCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCT,EAAOY,IAAYH,EAAAA,EAAAA,UAAuB,MAqBjD,OAnBAI,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,MAAMT,GAC7B,IAAKQ,EAASE,GACZ,MAAM,IAAIC,MAAM,8BAA8BH,EAASI,UAEzD,MAAMC,QAAeL,EAASM,OAC9Bb,EAAQY,EACV,CAAE,MAAOE,GACPV,EAASU,EACX,CAAC,QACCX,GAAW,EACb,GAGFY,EAAW,GACV,CAAChB,IAEG,CAAER,OAAMW,UAASV,QAC1B,C","sources":["components/ParentComponent.tsx","hooks/useFetch.ts"],"sourcesContent":["import React from \"react\";\nimport { useFetch } from '../hooks/useFetch';\n\nconst LazyChildComponent = React.lazy(() => import(\"./ChildComponent\"));\n\nconst ParentComponent: React.FC = () => {\n  const { data, error } = useFetch('https://microsoftedge.github.io/Demos/json-dummy-data/5MB.json');\n  \n  if (error) return <div>`Error Parent component ${error}`</div>\n  if (data) console.log('Parent data: ', data);\n\n  return (\n    <div>\n    <div>Parent component</div>\n    <div>&darr;</div>\n    <LazyChildComponent />\n    </div>\n  );\n}\nexport default ParentComponent;\n","import { useState, useEffect } from 'react'\n\ninterface ApiResponse<T> {\n  data: T | null;\n  loading: boolean;\n  error: Error | null;\n}\n\nexport function useFetch<T>(url: string): ApiResponse<T> {\n  const [data, setData] = useState<T | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(`Request failed with status ${response.status}`);\n        }\n        const result = await response.json();\n        setData(result);\n      } catch (err: any) {\n        setError(err as Error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n\n  return { data, loading, error };\n}"],"names":["LazyChildComponent","React","ParentComponent","data","error","useFetch","_jsxs","children","console","log","_jsx","url","setData","useState","loading","setLoading","setError","useEffect","async","response","fetch","ok","Error","status","result","json","err","fetchData"],"sourceRoot":""}